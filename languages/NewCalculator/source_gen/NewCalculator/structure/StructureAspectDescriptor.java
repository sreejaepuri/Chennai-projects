package NewCalculator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCalculator = createDescriptorForCalculator();
  /*package*/ final ConceptDescriptor myConceptInputField = createDescriptorForInputField();
  /*package*/ final ConceptDescriptor myConceptInputFieldReference = createDescriptorForInputFieldReference();
  /*package*/ final ConceptDescriptor myConceptOutputField = createDescriptorForOutputField();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCalculator, myConceptInputField, myConceptInputFieldReference, myConceptOutputField);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Calculator:
        return myConceptCalculator;
      case LanguageConceptSwitch.InputField:
        return myConceptInputField;
      case LanguageConceptSwitch.InputFieldReference:
        return myConceptInputFieldReference;
      case LanguageConceptSwitch.OutputField:
        return myConceptOutputField;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCalculator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewCalculator", "Calculator", 0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006ea444L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:f40b8cfb-f832-4bd6-a498-544736d713d5(NewCalculator.structure)/1744137582703191108");
    b.version(2);
    b.aggregate("inputField", 0x18346be4006f2c4cL).target(0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006f2c15L).optional(true).ordered(true).multiple(true).origin("1744137582703225932").done();
    b.aggregate("outputField", 0x18346be4006f8965L).target(0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006f891aL).optional(true).ordered(true).multiple(true).origin("1744137582703249765").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewCalculator", "InputField", 0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006f2c15L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:f40b8cfb-f832-4bd6-a498-544736d713d5(NewCalculator.structure)/1744137582703225877");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputFieldReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewCalculator", "InputFieldReference", 0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006fd8cfL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:f40b8cfb-f832-4bd6-a498-544736d713d5(NewCalculator.structure)/1744137582703270095");
    b.version(2);
    b.associate("field", 0x18346be4006fd8d0L).target(0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006f2c15L).optional(false).origin("1744137582703270096").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewCalculator", "OutputField", 0xe2527d9f08044b88L, 0xb92a085f8ba5108bL, 0x18346be4006f891aL);
    b.class_(false, false, false);
    b.origin("r:f40b8cfb-f832-4bd6-a498-544736d713d5(NewCalculator.structure)/1744137582703249690");
    b.version(2);
    b.aggregate("expression", 0x18346be4006fb6bcL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1744137582703261372").done();
    return b.create();
  }
}
