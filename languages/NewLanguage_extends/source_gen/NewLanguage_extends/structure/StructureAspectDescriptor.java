package NewLanguage_extends.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptInputField = createDescriptorForInputField();
  /*package*/ final ConceptDescriptor myConceptOutputField = createDescriptorForOutputField();
  /*package*/ final ConceptDescriptor myConceptsample1 = createDescriptorForsample1();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptInputField, myConceptOutputField, myConceptsample1);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.InputField:
        return myConceptInputField;
      case LanguageConceptSwitch.OutputField:
        return myConceptOutputField;
      case LanguageConceptSwitch.sample1:
        return myConceptsample1;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForInputField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage_extends", "InputField", 0x77fa14737334526L, 0x9ebf7cbd72b86b80L, 0x3d1ab7b3d0a0af2cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7917edd0-4639-4158-b0cd-2649be113fd3(NewLanguage_extends.structure)/4403033568635301676");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage_extends", "OutputField", 0x77fa14737334526L, 0x9ebf7cbd72b86b80L, 0x3d1ab7b3d0a0af48L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7917edd0-4639-4158-b0cd-2649be113fd3(NewLanguage_extends.structure)/4403033568635301704");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForsample1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage_extends", "sample1", 0x77fa14737334526L, 0x9ebf7cbd72b86b80L, 0x3d1ab7b3d09cba50L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7917edd0-4639-4158-b0cd-2649be113fd3(NewLanguage_extends.structure)/4403033568635042384");
    b.version(2);
    b.aggregate("input", 0x3d1ab7b3d0a0aff0L).target(0x77fa14737334526L, 0x9ebf7cbd72b86b80L, 0x3d1ab7b3d0a0af2cL).optional(true).ordered(true).multiple(false).origin("4403033568635301872").done();
    b.aggregate("output", 0x3d1ab7b3d0a0aff2L).target(0x77fa14737334526L, 0x9ebf7cbd72b86b80L, 0x3d1ab7b3d0a0af48L).optional(true).ordered(true).multiple(false).origin("4403033568635301874").done();
    return b.create();
  }
}
